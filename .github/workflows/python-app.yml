# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions


name: Sanic-Security PyTesting

on: [push]

permissions:
  contents: read

jobs:
  test:


    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        id: setup-python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Install dependencies
        run: |
          python -m pip install --no-warn-conflicts --upgrade pip
          pip install flake8
        #----------------------------------------------
        #       load cached venv if cache exists
        #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
        #----------------------------------------------
        # install dependencies if cache does not exist
        #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
 
        #----------------------------------------------
        # install your root project, if required
        #----------------------------------------------
      - name: Install library
        run: poetry install --no-interaction

      - name: Lint with flake8
        run: |
          source .venv/bin/activate
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
        #----------------------------------------------
        #              run test suite
        #----------------------------------------------
      - name: Test with coverage and pytest
        run: |
          source .venv/bin/activate
          poetry run pytest -x --cov=sanic_security --cov-report=xml
